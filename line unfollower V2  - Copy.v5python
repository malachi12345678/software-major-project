{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\nLTR = Line(brain.three_wire_port.a)\nLTM = Line(brain.three_wire_port.b)\nLTL = Line(brain.three_wire_port.c)\nML = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nMR = Motor(Ports.PORT2, GearSetting.RATIO_18_1, False)\nLTRR = Line(brain.three_wire_port.g)\nLTLL = Line(brain.three_wire_port.h)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n#maze logic right hand rule follow rhs of maze\n#win condition dark black line < 20 percent reflection\n\ndef DF():\n    MR.set_velocity(10, PERCENT)\n    ML.set_velocity(10, PERCENT)\n    MR.spin(FORWARD)\n    ML.spin(FORWARD)\n\ndef DR():\n    MR.set_velocity(10, PERCENT)\n    ML.set_velocity(10, PERCENT)\n    MR.spin(REVERSE)\n    ML.spin(REVERSE)\n\ndef TSR():\n    MR.set_velocity(25, PERCENT)\n    ML.set_velocity(15, PERCENT)\n    MR.spin(REVERSE)\n    ML.spin(FORWARD)\n\ndef TSL():\n    MR.set_velocity(15, PERCENT)\n    ML.set_velocity(25, PERCENT)\n    MR.spin(FORWARD)\n    ML.spin(REVERSE)\n\ndef TR():\n    MR.set_velocity(10, PERCENT)\n    ML.set_velocity(10, PERCENT)\n    MR.spin(REVERSE)\n    ML.spin(FORWARD)\n\ndef TL():\n    MR.set_velocity(10, PERCENT)\n    ML.set_velocity(10, PERCENT)\n    MR.spin(FORWARD)\n    ML.spin(REVERSE)\n\ndef get_ratio(turncount, drivecount):\n    turnratio = ((2 * drivecount) / (turncount))\n    return turnratio\n\ndef is_stuck(turnratio):\n    k = 7\n    if turnratio <= k:\n        return True\n    else:\n        return False\n\ndef main():\n    while True:\n        if LTRR.reflectivity(PERCENT) > 80 and LTR.reflectivity(PERCENT) < 80:\n            DF()\n            wait(0.1,SECONDS)\n        if LTRR.reflectivity(PERCENT) > 80 and LTR.reflectivity(PERCENT) > 80:\n            TSL()\n            wait(0.1,SECONDS)\n        if LTRR.reflectivity(PERCENT) < 80 and LTR.reflectivity(PERCENT) < 80:\n            TSR()\n            wait(0.1,SECONDS)\n    \n\ndef readout():\n    ML.set_stopping(COAST)\n    MR.set_stopping(COAST)\n    #while True:\n    ltll = LTLL.reflectivity(PERCENT)\n    ltrr = LTRR.reflectivity(PERCENT)\n    brain.screen.set_cursor(1,1)\n    brain.screen.print(ltll)\n    brain.screen.set_cursor(2,1)\n    brain.screen.print(ltrr)\n    wait(0.1,SECONDS)\n    brain.screen.clear_screen()\n\n\n\n\nmain()\n","textLanguage":"python","robotConfig":[{"port":[1],"name":"LTR","customName":true,"deviceType":"LineTracker","deviceClass":"line","setting":{},"triportSourcePort":22},{"port":[2],"name":"LTM","customName":true,"deviceType":"LineTracker","deviceClass":"line","setting":{},"triportSourcePort":22},{"port":[3],"name":"LTL","customName":true,"deviceType":"LineTracker","deviceClass":"line","setting":{},"triportSourcePort":22},{"port":[1],"name":"ML","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"MR","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[7],"name":"LTRR","customName":true,"deviceType":"LineTracker","deviceClass":"line","setting":{},"triportSourcePort":22},{"port":[8],"name":"LTLL","customName":true,"deviceType":"LineTracker","deviceClass":"line","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.10","minVersion":"3.1.0","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"target":"Physical"}